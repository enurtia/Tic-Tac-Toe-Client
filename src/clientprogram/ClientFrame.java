/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientprogram;

import javax.swing.DefaultListModel;

/**
 *
 * @author Alex
 */
public class ClientFrame extends javax.swing.JFrame
{
    private ConnectFrame conFrame;
    private boolean connected;
    private IOHandler ioHandler;
    private boolean isIngame;
    private DefaultListModel<String> userList;
    private String username;
    private boolean isTurn;
    private MainPanel mainPanel;
    /**
     * Creates new form ClientFrame
     */
    public ClientFrame()
    {
        mainPanel = new MainPanel(this);
        initComponents();
        connected = false;
        isIngame = false;
        userList = new DefaultListModel<>();
        jListUsersOnline.setModel(userList);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        chatScopes = new javax.swing.ButtonGroup();
        jPanel1 = mainPanel;
        lblConnected = new javax.swing.JLabel();
        btnConnect = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListUsersOnline = new javax.swing.JList<>();
        txtFieldInput = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtChatBox = new javax.swing.JTextArea();
        lblOnlineUsers = new javax.swing.JLabel();
        btnRequest = new javax.swing.JButton();
        lblChatType = new javax.swing.JLabel();
        lblTurn = new javax.swing.JLabel();
        lblX = new javax.swing.JLabel();
        lblCircle = new javax.swing.JLabel();
        radioBtnGlobal = new javax.swing.JRadioButton();
        radioBtnGame = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TicTacToe Client");

        jPanel1.setBackground(new java.awt.Color(51, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 670, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 670, Short.MAX_VALUE)
        );

        lblConnected.setText("Connected to: ");
        lblConnected.setOpaque(true);

        btnConnect.setText("Connect");
        btnConnect.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnConnectActionPerformed(evt);
            }
        });

        jListUsersOnline.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListUsersOnline.addListSelectionListener(new javax.swing.event.ListSelectionListener()
        {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt)
            {
                jListUsersOnlineValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListUsersOnline);

        txtFieldInput.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtFieldInputActionPerformed(evt);
            }
        });

        txtChatBox.setColumns(20);
        txtChatBox.setRows(5);
        jScrollPane2.setViewportView(txtChatBox);

        lblOnlineUsers.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOnlineUsers.setText("Online Users");

        btnRequest.setText("Request To Play");
        btnRequest.setEnabled(false);
        btnRequest.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnRequestActionPerformed(evt);
            }
        });

        lblChatType.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblChatType.setText("Chat");

        lblTurn.setText("Turn: ");

        lblX.setText("X: ");

        lblCircle.setText("O:");

        chatScopes.add(radioBtnGlobal);
        radioBtnGlobal.setSelected(true);
        radioBtnGlobal.setText("Global Chat");

        chatScopes.add(radioBtnGame);
        radioBtnGame.setText("Game Chat");
        radioBtnGame.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnConnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRequest, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                                .addComponent(lblTurn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblCircle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(radioBtnGame)
                            .addComponent(radioBtnGlobal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblOnlineUsers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)))
                    .addComponent(lblConnected, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFieldInput)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblChatType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblConnected)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblOnlineUsers)
                            .addComponent(btnConnect))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnRequest)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblX)
                                .addGap(5, 5, 5)
                                .addComponent(lblCircle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTurn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(radioBtnGame)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioBtnGlobal))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblChatType)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFieldInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void isX(boolean bool)
    {
        if(bool)
        {
            lblX.setText("X: You");
        }
        else
        {
            lblX.setText("X: Opponent");
        }
    }
    
    public void isO(boolean bool)
    {
        if(bool)
        {
            lblCircle.setText("O: You");
        }
        else
        {
            lblCircle.setText("O: Opponent");
        }
    }
    
    public void resetGameVariables()
    {
        lblX.setText("X:");
        lblCircle.setText("O:");
        lblTurn.setText("Turn:");
    }
    
    public boolean globalChat()
    {
        return radioBtnGlobal.isSelected();
    }
    
    public boolean gameChat()
    {
        return radioBtnGame.isSelected();
    }
    
    public MainPanel getGrid()
    {
        return mainPanel;
    }
    
    public IOHandler getIOHandler()
    {
        return ioHandler;
    }
    
    public boolean getIngame()
    {
        return isIngame;
    }
    
    public void setIngame(boolean bool)
    {
        isIngame = bool;
        
        if(isIngame)
        {
            btnRequest.setEnabled(false);
            radioBtnGame.setEnabled(true);
        }
        else
        {
            radioBtnGame.setEnabled(false);
            radioBtnGame.setSelected(false);
            radioBtnGlobal.setSelected(true);
        }
    }
    
    public void setTurn(boolean bool)
    {
        isTurn = bool;
        if(isTurn)
        {
            lblTurn.setText("Turn: You");
        }
        else
        {
            lblTurn.setText("Turn: Opponent");
        }
    }
    
    public boolean getTurn()
    {
        return isTurn;
    }
    
    public boolean isConnected()
    {
        return connected;
    }
    
    public ConnectFrame getConnectFrame()
    {
        return conFrame;
    }
    
    public void setUsername(String s)
    {
        username = s;
    }
    
    public void setConnected(boolean bool)
    {
        connected = bool;
    }
    
    public void setLabel(String s)
    {
        lblConnected.setText(s);
    }
    
    public void conFrameClosed()
    {
        if(!connected)
        {
            btnConnect.setEnabled(true);
        }
    }
    
    public void appendChat(String s)
    {
        txtChatBox.setText(txtChatBox.getText() + s + "\n");
    }
    
    public DefaultListModel<String> getUserList()
    {
        return userList;
    }
    
    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnConnectActionPerformed
    {//GEN-HEADEREND:event_btnConnectActionPerformed
        if(!connected)
        {
            ioHandler = new IOHandler(this);
            conFrame = new ConnectFrame();
            conFrame.passHandler(ioHandler);
            conFrame.setVisible(true);
            btnConnect.setEnabled(false);
        }
    }//GEN-LAST:event_btnConnectActionPerformed

    private void txtFieldInputActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtFieldInputActionPerformed
    {//GEN-HEADEREND:event_txtFieldInputActionPerformed
        //CHAT INPUT
        if(connected)
        {
            if(radioBtnGlobal.isSelected())
            {
                ioHandler.out("[GLOBALCHAT]" + txtFieldInput.getText());
            }
            else if(radioBtnGame.isSelected())
            {
                ioHandler.out("[GAMECHAT]" + txtFieldInput.getText());
            }
            txtFieldInput.setText("");
        }
    }//GEN-LAST:event_txtFieldInputActionPerformed

    private void jListUsersOnlineValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_jListUsersOnlineValueChanged
    {//GEN-HEADEREND:event_jListUsersOnlineValueChanged
        String selectedUser = jListUsersOnline.getSelectedValue();
        if(selectedUser != null && !selectedUser.equals(username) && !isIngame)
        {
            btnRequest.setEnabled(true);
        }
        else
        {
            btnRequest.setEnabled(false);
        }
    }//GEN-LAST:event_jListUsersOnlineValueChanged

    private void btnRequestActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnRequestActionPerformed
    {//GEN-HEADEREND:event_btnRequestActionPerformed
        //Requests to play with selected user.
        String selectedUser = jListUsersOnline.getSelectedValue();
        if(selectedUser != null && !selectedUser.equals(username))
        {
            ioHandler.out("[REQUEST]" + selectedUser);
        }
    }//GEN-LAST:event_btnRequestActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(ClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(ClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(ClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(ClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new ClientFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConnect;
    private javax.swing.JButton btnRequest;
    private javax.swing.ButtonGroup chatScopes;
    private javax.swing.JList<String> jListUsersOnline;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblChatType;
    private javax.swing.JLabel lblCircle;
    private javax.swing.JLabel lblConnected;
    private javax.swing.JLabel lblOnlineUsers;
    private javax.swing.JLabel lblTurn;
    private javax.swing.JLabel lblX;
    private javax.swing.JRadioButton radioBtnGame;
    private javax.swing.JRadioButton radioBtnGlobal;
    private javax.swing.JTextArea txtChatBox;
    private javax.swing.JTextField txtFieldInput;
    // End of variables declaration//GEN-END:variables
}
